/* io_i
 * Author: Szegedi Gábor D071PO
 * Creation date: 2018-06-29
 */
IMPLEMENTATION io_i
REFINES io

IMPORTS
    BASIC_IO
    
DEFINITIONS
    "constants.def"
    
CONCRETE_VARIABLES
   io_status
    
INITIALISATION
    io_status := IO_INITIALIZING
    
OPERATIONS
    io_init =
    BEGIN
        io_status := IO_INITIALIZING
    END;
    
    a_array <--read_a =
    BEGIN
        STRING_WRITE("Kérek |");
        INT_WRITE(arraySize);
        STRING_WRITE("| darab számot |");
        INT_WRITE(minValue);
        STRING_WRITE("| és |");
        INT_WRITE(maxValue);
        STRING_WRITE("| között! Elrakom őket az 'A' tömbbe.\n");

        VAR index, readint IN
            index := 0;
            readint := minValue;
            a_array := (0..arraySize - 1)*{minValue};
			WHILE index < arraySize DO
			    readint <-- INTERVAL_READ( minValue, maxValue );
			    a_array(index) := readint;
                index := index + 1
			INVARIANT
				index : 0..arraySize
				& a_array : 0..arraySize - 1 --> minValue .. maxValue
			VARIANT
				arraySize-index
			END
		END;
		STRING_WRITE("'A' tömb beolvasva.\n");
        io_status := IO_A_READ
    END;

    b_array <-- read_b =
    BEGIN
        STRING_WRITE("Kérek |");
        INT_WRITE(arraySize);
        STRING_WRITE("| darab számot |");
        INT_WRITE(minValue);
        STRING_WRITE("| és |");
        INT_WRITE(maxValue);
        STRING_WRITE("| között úgy, hogy minden szám kisebb vagy egyenlő legyen az előzőnél! Elrakom őket a 'B' tömbbe.\n");

        VAR index, readint, maximum IN // TODO: Remove size? Replace it with arraySize 
            index := 0;
            readint := minValue;
            maximum := maxValue;
            b_array := (0..arraySize - 1)*{maxValue};
			WHILE index < arraySize DO
			    readint <-- INTERVAL_READ( minValue, maximum); // TODO: Store the previous read value as max and replace maxValue with it.
			    b_array(index) := readint;
			    maximum := readint;
                index := index + 1
			INVARIANT
				index : 0..arraySize
				& maximum: minValue..maxValue
				& b_array : 0..arraySize - 1 --> minValue .. maxValue
				//& !ii.(ii : 0..index - 2 => b_array(ii) >= b_array(ii+1))
			VARIANT
				arraySize-index
			END
		END;
		STRING_WRITE("'B' tömb beolvasva.\n");
        io_status := IO_B_READ
    END;
    
    write_result(c_array, special_element_found, special_element_index) =
    BEGIN
        STRING_WRITE("'A' és 'B' tömb elemein páronként az alábbi műveletet végezzük el:\n");
        STRING_WRITE("19*a[i] + (-9)*b_array[i] + 4\n");
        STRING_WRITE("Az így kapott sorozat a következő:\n");
        VAR index IN
            index := 0;
            WHILE index /= arraySize DO
                INT_WRITE(index + 1);
                STRING_WRITE(". = ");
                INT_WRITE(c_array(index));
                STRING_WRITE("\n");
                index := index + 1
            INVARIANT
                index : 0..arraySize
                & c_array : 0..arraySize - 1 --> INT
            VARIANT
                arraySize-index
        	END
        END;
        IF special_element_found = TRUE THEN
            STRING_WRITE("A kapott sorozat egyik elemére igaz az, hogy c_array[index] mod 32 = 25");
            STRING_WRITE("Index értéke: |");
            INT_WRITE(special_element_index);
            STRING_WRITE("|\n")
        ELSE
            STRING_WRITE("A kapott sorozat egyik elemére sem igaz az, hogy c_array[index] mod 32 = 25")
        END;
        io_status := IO_WRITTEN
    END
 END